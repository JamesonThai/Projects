import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;

/**
 * 
 * @author Jameson Thai Goal is to implement reservation system on an airline
 */
public class ReservationSystem {
	
/**
 * 
 * @param args Reading in file at args[]
 * @throws IOException Throws exception if file no input
 */
	public static void main(String[] args) throws IOException {

			}

	/**
	 * Method of adding passenger
	 * 
	 * @param p
	 *            Passenger being added
	 * @param plane
	 *            Airplane
	 * @return String of reserved seat
	 */
	public static String addPassenger(Passenger p, Airplane plane) {
		String seat = "Request Failed";

		return seat;
	}

	/**
	 * Method of adding group
	 * 
	 * @param list
	 *            Arraylist of passengers being added
	 * @param p
	 *            Passenger being added
	 * @param plane
	 *            Airplane
	 * @return String of reserved seats
	 */
	public static String addGroup(ArrayList<Passenger> list, Passenger p, Airplane plane) {
		String seat = "Request Failed";

		return seat;
	}

	/**
	 * Cancels the reservation
	 * 
	 * @param type
	 *            Individual or Group
	 * @param name
	 *            Name being canceled
	 * @param plane
	 *            Airplane
	 */
	public static void cancelReservations(String type, String name, Airplane plane) {
	}

	/**
	 * Prints Available seating
	 * 
	 * @param c
	 *            Type of class
	 * @param plane
	 *            Airplane
	 */
	public static void printAvailability(String c, Airplane plane) {
		int num = 0;
		int count = 0;
		int len = 0;

		if (c.equals("First")) {
			System.out.println("First");

			for (int i = 0; i < plane.rowF; i++) {
				for (int k = 0; k < plane.colF; k++) {
					if (plane.fir[i][k] == null)
						len++;
				}
				for (int j = 0; j < plane.colF; j++) {
					if (plane.fir[i][j] == null) {
						if (num == 0) {
							System.out.printf("%d: ", i + 1);
							num++;
						}
						System.out.print(plane.Converter(j, "First"));
						if (len > 1) {
							System.out.print(",");
							len--;
						}
						count++;
					}
				}
				if (count > 0)
					System.out.println();
				num = 0;
				count = 0;
				len = 0;
			}
		} else if (c.equals("Economy")) {
			System.out.println("Economy");

			for (int i = 0; i < plane.rowE; i++) {
				for (int k = 0; k < plane.colE; k++) {
					if (plane.eco[i][k] == null)
						len++;
				}
				for (int j = 0; j < plane.colE; j++) {
					if (plane.eco[i][j] == null) {
						if (num == 0) {
							System.out.printf("%d: ", i + 10);
							num++;
						}
						System.out.print(plane.Converter(j, "Economy"));
						if (len > 1) {
							len--;
							System.out.print(",");
						}
						count++;
					}
				}
				if (count > 0)
					System.out.println();
				num = 0;
				count = 0;
				len = 0;
			}
		} else
			System.out.println("gg WP");
	}

	/**
	 * Displays Manifest of plane
	 * 
	 * @param c
	 *            Type of class
	 * @param plane
	 *            Airplane
	 */
	public static void displayManifest(String c, Airplane plane) {
		int count = 0;
		if (c.equals("First")) {
			System.out.println("First");
			for (int i = 0; i < plane.rowF; i++) {
				for (int j = 0; j < plane.colF; j++) {
					if (plane.fir[i][j] != null) {
						System.out.printf("%d%s: %s\n", i + 1, plane.Converter(j, "First"),
								plane.fir[i][j].Name.trim());
						count++;
					}
				}
			}
			if (count == 0)
				System.out.println("It's so lonely here");
		} else if (c.equals("Economy")) {
			System.out.println("Economy");
			for (int i = 0; i < plane.rowE; i++) {
				for (int j = 0; j < plane.colE; j++) {
					if (plane.eco[i][j] != null) {
						System.out.printf("%d%s: %s\n", i + 10, plane.Converter(j, "Economy"), plane.eco[i][j].Name);
						count++;
					}
				}
			}
			if (count == 0)
				System.out.println("It's so lonely here!");
		} else
			System.out.println("Wrong input");
	}

	/**
	 * For quitting the airplane
	 * 
	 * @param plane
	 *            plane type being passed in
	 * @throws FileNotFoundException
	 *             If the damn file isn't found
	 */
	public static void Quit(Airplane plane) throws FileNotFoundException {
		PrintWriter out = new PrintWriter("CL34");
		int count = 0;
		for (int i = 0; i < plane.rowF; i++) {
			for (int j = 0; j < plane.colF; j++) {
				if (plane.fir[i][j] != null) {
					if (plane.fir[i][j].grwp != null) {
						out.printf("%d%s, G, %s, %s\n", i + 1, plane.Converter(j, "First"), plane.fir[i][j].grwp,
								plane.fir[i][j].Name);
					} else
						out.printf("%d%s, I, %s\n", i + 1, plane.Converter(j, "First"), plane.fir[i][j].Name);
					count++;
				}
			}
		}
		for (int i = 0; i < plane.rowE; i++) {
			for (int j = 0; j < plane.colE; j++) {
				if (plane.eco[i][j] != null) {
					if (plane.eco[i][j].grwp != null) {
						out.printf("%d%s, G, %s, %s\n", i + 10, plane.Converter(j, "Economy"), plane.eco[i][j].grwp,
								plane.eco[i][j].Name);
					} else
						out.printf("%d%s, I, %s\n", i + 10, plane.Converter(j, "Economy"), plane.eco[i][j].Name);
					count++;
				}
			}
		}

		if (count == 0)
			out.println("It's so lonely here");
		out.close();
	}
}
